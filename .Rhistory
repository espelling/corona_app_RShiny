n <- length(weekly_call_volume_df$week_index)
untere_Schranke_check <- weekly_call_volume_df$weekly_call_volume >= untere_Schranke
obere_Schranke_check <- weekly_call_volume_df$weekly_call_volume <= obere_Schranke
for(i in 1:n){
ausreisser[i] <- !(untereSchranke_check[i] && obereSchranke_check[i])
}
untere_Schranke_check <- weekly_call_volume_df$weekly_call_volume >= untere_Schranke
obere_Schranke_check <- weekly_call_volume_df$weekly_call_volume <= obere_Schranke
untere_Schranke_check
obere_Schranke_check
n <- length(weekly_call_volume_df$week_index)
untere_Schranke_check <- weekly_call_volume_df$weekly_call_volume >= untere_Schranke
obere_Schranke_check <- weekly_call_volume_df$weekly_call_volume <= obere_Schranke
for(i in 1:n){
ausreisser[i] <- !(untere_Schranke_check[i] && obere_Schranke_check[i])
}
ausreisser
untere_Schranke_check <- weekly_call_volume_df$weekly_call_volume >= untere_Schranke
obere_Schranke_check <- weekly_call_volume_df$weekly_call_volume <= obere_Schranke
n <- length(weekly_call_volume_df$week_index)
untere_Schranke_check <- weekly_call_volume_df$weekly_call_volume >= untere_Schranke
obere_Schranke_check <- weekly_call_volume_df$weekly_call_volume <= obere_Schranke
for(i in 1:n){
ausreisser[i] <- !(untere_Schranke_check[i] && obere_Schranke_check[i])
}
ausreisser
data.frame(trend, obere_Schranke, untere_Schranke, ausreisser)
data.frame(weekly_call_volume_df,trend, obere_Schranke, untere_Schranke, ausreisser)
plot(weekly_call_volume_df)
plot(weekly_call_volume_df)
lines(trend, type = "l", col = "red")
lines(untere_Schranke, type = "l", col = "blue")
lines(obere_Schranke, type = "l", col = "blue")
plot(weekly_call_volume_df)
lines(trend, type = "l", col = "red")
lines(untere_Schranke, type = "l", col = "blue")
lines(obere_Schranke, type = "l", col = "blue")
points(..., col = (as.integer(ausreisser) + 1))
plot(weekly_call_volume_df)
lines(trend, type = "l", col = "red")
lines(untere_Schranke, type = "l", col = "blue")
lines(obere_Schranke, type = "l", col = "blue")
points(weekly_call_volume_df, col = (as.integer(ausreisser) + 1))
plot(weekly_call_volume_df, type = "l")
lines(trend, type = "l", col = "red")
lines(untere_Schranke, type = "l", col = "blue")
lines(obere_Schranke, type = "l", col = "blue")
points(weekly_call_volume_df, col = (as.integer(ausreisser) + 1))
loess <- loess(weekly_call_volume_df$weekly_call_volume ~ weekly_call_volume_df$week_index, span = 0.3)
untere_Schranke_check <- weekly_call_volume_df$weekly_call_volume >= untere_Schranke
obere_Schranke_check <- weekly_call_volume_df$weekly_call_volume <= obere_Schranke
untere_Schranke_check
obere_Schranke_check
untere_Schranke_check <- weekly_call_volume_df$weekly_call_volume >= untere_Schranke
obere_Schranke_check <- weekly_call_volume_df$weekly_call_volume <= obere_Schranke
untere_Schranke_check
obere_Schranke_check
n <- length(weekly_call_volume_df$week_index)
for(i in 1:n){
ausreisser[i] <- !(untere_Schranke_check[i] && obere_Schranke_check[i])
}
ausreisser
untere_Schranke_check <- weekly_call_volume_df$weekly_call_volume >= untere_Schranke
obere_Schranke_check <- weekly_call_volume_df$weekly_call_volume <= obere_Schranke
n <- length(weekly_call_volume_df$week_index)
for(i in 1:n){
ausreisser[i] <- !(untere_Schranke_check[i] && obere_Schranke_check[i])
}
ausreisser
hallo <- data.frame(weekly_call_volume_df,trend, obere_Schranke, untere_Schranke, ausreisser)
plot(hallo)
data.frame(weekly_call_volume_df,trend, obere_Schranke, untere_Schranke, ausreisser)
plot(weekly_call_volume_df, type = "l")
lines(trend, type = "l", col = "red")
lines(untere_Schranke, type = "l", col = "blue")
lines(obere_Schranke, type = "l", col = "blue")
points(weekly_call_volume_df, col = (as.integer(ausreisser) + 1))
loess <- loess(weekly_call_volume_df$weekly_call_volume ~ weekly_call_volume_df$week_index, span = 0.3)
trend <- loess$fitted
rauschen <- weekly_call_volume_df - trend
plot(weekly_call_volume_df, type = "l")
lines(trend, type = "l", col = "red")
lines(untere_Schranke, type = "l", col = "blue")
lines(obere_Schranke, type = "l", col = "blue")
points(weekly_call_volume_df, col = (as.integer(ausreisser) + 1))
loess <- loess(weekly_call_volume_df$weekly_call_volume ~ weekly_call_volume_df$week_index, span = 0.4)
trend <- loess$fitted
rauschen <- weekly_call_volume_df - trend
plot(weekly_call_volume_df, type = "l")
lines(trend, type = "l", col = "red")
lines(untere_Schranke, type = "l", col = "blue")
lines(obere_Schranke, type = "l", col = "blue")
points(weekly_call_volume_df, col = (as.integer(ausreisser) + 1))
loess <- loess(weekly_call_volume_df$weekly_call_volume ~ weekly_call_volume_df$week_index, span = 0.75)
trend <- loess$fitted
rauschen <- weekly_call_volume_df - trend
plot(weekly_call_volume_df, type = "l")
lines(trend, type = "l", col = "red")
lines(untere_Schranke, type = "l", col = "blue")
lines(obere_Schranke, type = "l", col = "blue")
points(weekly_call_volume_df, col = (as.integer(ausreisser) + 1))
knitr::opts_chunk$set(echo = TRUE)
loess <- loess(weekly_call_volume_df$weekly_call_volume ~ weekly_call_volume_df$week_index, span = 0.75)
trend <- loess$fitted
rauschen <- weekly_call_volume_df - trend
standardabweichung_rauschen <- sd(rauschen$weekly_call_volume)
standardabweichung_rauschen
obere_Schranke <- trend + (2*standardabweichung_rauschen)
untere_Schranke <- trend - (2*standardabweichung_rauschen)
obere_Schranke
untere_Schranke
untere_Schranke_check <- weekly_call_volume_df$weekly_call_volume >= untere_Schranke
obere_Schranke_check <- weekly_call_volume_df$weekly_call_volume <= obere_Schranke
n <- length(weekly_call_volume_df$week_index)
for(i in 1:n){
ausreisser[i] <- !(untere_Schranke_check[i] && obere_Schranke_check[i])
}
ausreisser
data.frame(weekly_call_volume_df,trend, obere_Schranke, untere_Schranke, ausreisser)
plot(weekly_call_volume_df, type = "l")
lines(trend, type = "l", col = "red")
lines(untere_Schranke, type = "l", col = "blue")
lines(obere_Schranke, type = "l", col = "blue")
points(weekly_call_volume_df, col = (as.integer(ausreisser) + 1))
loess <- loess(weekly_call_volume_df$weekly_call_volume ~ weekly_call_volume_df$week_index, span = 0.3)
trend <- loess$fitted
rauschen <- weekly_call_volume_df - trend
knitr::opts_chunk$set(echo = TRUE)
loess <- loess(weekly_call_volume_df$weekly_call_volume ~ weekly_call_volume_df$week_index, span = 0.3)
trend <- loess$fitted
rauschen <- weekly_call_volume_df - trend
standardabweichung_rauschen <- sd(rauschen$weekly_call_volume)
standardabweichung_rauschen
obere_Schranke <- trend + (2*standardabweichung_rauschen)
untere_Schranke <- trend - (2*standardabweichung_rauschen)
obere_Schranke
untere_Schranke
untere_Schranke_check <- weekly_call_volume_df$weekly_call_volume >= untere_Schranke
obere_Schranke_check <- weekly_call_volume_df$weekly_call_volume <= obere_Schranke
n <- length(weekly_call_volume_df$week_index)
for(i in 1:n){
ausreisser[i] <- !(untere_Schranke_check[i] && obere_Schranke_check[i])
}
ausreisser
data.frame(weekly_call_volume_df,trend, obere_Schranke, untere_Schranke, ausreisser)
plot(weekly_call_volume_df, type = "l")
lines(trend, type = "l", col = "red")
lines(untere_Schranke, type = "l", col = "blue")
lines(obere_Schranke, type = "l", col = "blue")
points(weekly_call_volume_df, col = (as.integer(ausreisser) + 1))
acf(call_volume_df$call_volume)
loess <- loess(weekly_call_volume_df$weekly_call_volume ~ weekly_call_volume_df$week_index, span = 0.4)
trend <- loess$fitted
rauschen <- weekly_call_volume_df - trend
standardabweichung_rauschen <- sd(rauschen$weekly_call_volume)
standardabweichung_rauschen
obere_Schranke <- trend + (2*standardabweichung_rauschen)
untere_Schranke <- trend - (2*standardabweichung_rauschen)
obere_Schranke
untere_Schranke
untere_Schranke_check <- weekly_call_volume_df$weekly_call_volume >= untere_Schranke
obere_Schranke_check <- weekly_call_volume_df$weekly_call_volume <= obere_Schranke
n <- length(weekly_call_volume_df$week_index)
for(i in 1:n){
ausreisser[i] <- !(untere_Schranke_check[i] && obere_Schranke_check[i])
}
ausreisser
data.frame(weekly_call_volume_df,trend, obere_Schranke, untere_Schranke, ausreisser)
knitr::opts_chunk$set(echo = TRUE)
loess <- loess(weekly_call_volume_df$weekly_call_volume ~ weekly_call_volume_df$week_index, span = 0.4)
trend <- loess$fitted
rauschen <- weekly_call_volume_df - trend
standardabweichung_rauschen <- sd(rauschen$weekly_call_volume)
standardabweichung_rauschen
obere_Schranke <- trend + (2*standardabweichung_rauschen)
untere_Schranke <- trend - (2*standardabweichung_rauschen)
obere_Schranke
untere_Schranke
untere_Schranke_check <- weekly_call_volume_df$weekly_call_volume >= untere_Schranke
obere_Schranke_check <- weekly_call_volume_df$weekly_call_volume <= obere_Schranke
n <- length(weekly_call_volume_df$week_index)
for(i in 1:n){
ausreisser[i] <- !(untere_Schranke_check[i] && obere_Schranke_check[i])
}
ausreisser
data.frame(weekly_call_volume_df,trend, obere_Schranke, untere_Schranke, ausreisser)
plot(weekly_call_volume_df, type = "l")
lines(trend, type = "l", col = "red")
lines(untere_Schranke, type = "l", col = "blue")
lines(obere_Schranke, type = "l", col = "blue")
points(weekly_call_volume_df, col = (as.integer(ausreisser) + 1))
plot(weekly_call_volume_df)
lines(trend, type = "l", col = "red")
lines(untere_Schranke, type = "l", col = "blue")
lines(obere_Schranke, type = "l", col = "blue")
points(weekly_call_volume_df, col = (as.integer(ausreisser) + 1))
pacf(call_volume_df$call_volume)
acf(call_volume_df$call_volume)
pacf(call_volume_df$call_volume)
shiny::runApp('Niki_app')
runApp('Niki_app')
knitr::opts_chunk$set(echo = TRUE)
min(groessen)
groessen = c(182, 180, 182, 179, 185, 175, 184)
groessen
min(groessen)
median <- median(groessen)
minimum <- min(groessen)
median <- median(groessen)
arithmetisches_mittel <- mean(groessen)
maximum <- max(groessen)
summary(groessen)
mean(platz)
platz <- c(2,4,1,2,5,3,4,3,5,4)
knitr::opts_chunk$set(echo = TRUE)
groessen = c(182, 180, 182, 179, 185, 175, 184)
groessen
minimum <- min(groessen)
median <- median(groessen)
arithmetisches_mittel <- mean(groessen)
maximum <- max(groessen)
summary(groessen)
platz <- c(2,4,1,2,5,3,4,3,5,4)
mean(platz)
modus(platz)
mod(platz)
Mod(platz)
Mode(platz)
mode(platz)
table(platz)
max(table(platz))
table(platz)
h <- table(platz)
knitr::opts_chunk$set(echo = TRUE)
bmw <- read.csv2("bmw.csv", dec = ".")
View(bmw)
schluss <- bmw$Schluss
durchschnitt_schluss <- mean(schluss)
vektorelemente_abweichung <- abs(schluss - durchschnitt_schluss)
mittlere_absolute_abweichung_bmw <- mean(vektorelemente_abweichung)
mittlere_absolute_abweichung_bmw
vektorelemente_varianz <- vektorelemente_abweichung^2
varianz <- mean(vektorelemente_varianz)
stichprobenvarianz <- sum(vektorelemente_varianz) * (1/(length(vektorelemente_varianz)-1))
varianz
stichprobenvarianz
standardabweichung <- varianz^(1/2)
stichprobenstandardabweichung <- stichprobenvarianz^(1/2)
standardabweichung
stichprobenstandardabweichung
varianz_R <- var(schluss)
standardabweichung_R <- sd(schluss)
varianz_R
standardabweichung_R
variationskoeffizient_vw <- 10.28/174.56
variationskoeffizient_vw
variationskoeffizient_bmw <- 4.68/36.96
variationskoeffizient_bmw
library(knitr)
zulassungen <- read.csv("neuzulassungen.csv")
kable(zulassungen)
zulassungen <- zulassungen[order(zulassungen$Stueckzahl),]
f_VW <- zulassungen$Stueckzahl[1]/sum(zulassungen$Stueckzahl)
f_BMW <-zulassungen$Stueckzahl[2]/sum(zulassungen$Stueckzahl)
f_Mercedes <-zulassungen$Stueckzahl[3]/sum(zulassungen$Stueckzahl)
f_Audi <-zulassungen$Stueckzahl[4]/sum(zulassungen$Stueckzahl)
f_Opel <-zulassungen$Stueckzahl[5]/sum(zulassungen$Stueckzahl)
f_Ford <-zulassungen$Stueckzahl[6]/sum(zulassungen$Stueckzahl)
f_Renault <-zulassungen$Stueckzahl[7]/sum(zulassungen$Stueckzahl)
f_Skoda <-zulassungen$Stueckzahl[8]/sum(zulassungen$Stueckzahl)
f_Hyundai <-zulassungen$Stueckzahl[9]/sum(zulassungen$Stueckzahl)
f_Toyota <-zulassungen$Stueckzahl[10]/sum(zulassungen$Stueckzahl)
f_vektor <- zulassungen$Stueckzahl[1:10]/sum(zulassungen$Stueckzahl)
F_VW = cumsum(f_VW)
F_BMW = cumsum(f_BMW)
F_Mercedes = cumsum(f_Mercedes)
F_Audi = cumsum(f_Audi)
F_Opel = cumsum(f_Opel)
F_Ford = cumsum(f_Ford)
F_Renault = cumsum(f_Renault)
F_Skoda = cumsum(f_Skoda)
F_Hyundai = cumsum(f_Hyundai)
F_Toyota = cumsum(f_Hyundai)
F_vektor <- cumsum(f_vektor)
f_Hersteller <- rep(1/length(zulassungen$Hersteller),10)
F_Hersteller <- cumsum(f_Hersteller)
zulassungen_Autofirmen <- data.frame(Index = c(1:length(zulassungen$Hersteller)),h_Hersteller = 1, f_Hersteller, F_Hersteller, Hersteller = zulassungen$Hersteller, Stückzahl = zulassungen$Stueckzahl, f_Stückzahl = f_vektor, F_Stückzahl = F_vektor)
View(zulassungen_Autofirmen)
f <- platz / sum(platz)
f <- platz / sum(platz) * 100
f
sum(f)
h <- table(platz)
h
f <- platz / sum(platz) * 100
f
f <- h / sum(platz) * 100
f
h <- table(platz)
h
f <- h / sum(h) * 100
f
cumsum(h)
cumsum(f)
h <- table(platz)
h
f <- h / sum(h) * 100
f
H <- cumsum(h)
H
F <- cumsum(f)
F
data.frame(h,f,)
data.frame(h,f,H,F)
h <- table(platz)
h
f <- h / sum(h) * 100
f
H <- cumsum(h)
H
F <- cumsum(f)
F
data.frame(h = h,f = f,H,F)
h <- count(platz)
h <- unique(platz)
h
f <- h / sum(h) * 100
f
H <- cumsum(h)
H
F <- cumsum(f)
F
data.frame(h = h,f = f,H,F)
h <- table(platz)
h
f <- h / sum(h) * 100
f
H <- cumsum(h)
H
F <- cumsum(f)
F
data.frame(h = h,f = f,H,F)
cbind(h,f,H,F)
h <- table(platz)
f <- h / sum(h) * 100
H <- cumsum(h)
F <- cumsum(f)
cbind(h,f,H,F)
order(groessen)
order(groessen, decreasing = T)
order(groessen, decreasing = F)
sort(groessen)
(175 + 179 + 180 + 182 + 182 + 184 + 185) / 7
sort(groessen)
h <- table(platz)
f <- h / sum(h) * 100
H <- cumsum(h)
F <- cumsum(f)
cbind(h,f,H,F)
0,7 * 60
0.7 * 60
0.3 * 60
0.6 * 40
f_kaufen_neueLimo <- 42/66
f_kaufen_neueLimo <- 42/66
f_kaufen_alteLimo <- 18/34
f_kaufen_neueLimo
f_kaufen_alteLimo
60*34/100
60*34/100
60*66/100
40*34/100
40*66/100
set.seed(1)
mietspiegel <- read.table("miete03.asc", header = TRUE)
mietspiegel <- mietspiegel[sample(1:nrow(mietspiegel), 200),]
plot(mietspiegel$wfl, mietspiegel$nm, xlab = "Wohnfläche", ylab = "Mietpreis")
mieten_lm <- lm(mietspiegel$nm ~ mietspiegel$wfl)
mieten_lm
abline(120.78,6.448)
set.seed(1)
mietspiegel <- read.table("miete03.asc", header = TRUE)
mietspiegel <- mietspiegel[sample(1:nrow(mietspiegel), 200),]
plot(mietspiegel$wfl, mietspiegel$nm, xlab = "Wohnfläche", ylab = "Mietpreis")
abline(120.78,6.448)
set.seed(1)
mietspiegel <- read.table("miete03.asc", header = TRUE)
mietspiegel <- mietspiegel[sample(1:nrow(mietspiegel), 200),]
plot(mietspiegel$wfl, mietspiegel$nm, xlab = "Wohnfläche", ylab = "Mietpreis")
set.seed(1)
mietspiegel <- read.table("miete03.asc", header = TRUE)
mietspiegel <- mietspiegel[sample(1:nrow(mietspiegel), 200),]
plot(mietspiegel$wfl, mietspiegel$nm, xlab = "Wohnfläche", ylab = "Mietpreis")
set.seed(1)
mietspiegel <- read.table("miete03.asc", header = TRUE)
mietspiegel <- mietspiegel[sample(1:nrow(mietspiegel), 200),]
plot(mietspiegel$wfl, mietspiegel$nm, xlab = "Wohnfläche", ylab = "Mietpreis")
set.seed(1)
mietspiegel <- read.table("miete03.asc", header = TRUE)
mietspiegel <- mietspiegel[sample(1:nrow(mietspiegel), 200),]
plot(mietspiegel$wfl, mietspiegel$nm, xlab = "Wohnfläche", ylab = "Mietpreis")
abline(120.78,6.448)
set.seed(1)
mietspiegel <- read.table("miete03.asc", header = TRUE)
mietspiegel <- mietspiegel[sample(1:nrow(mietspiegel), 200),]
plot(mietspiegel$wfl, mietspiegel$nm, xlab = "Wohnfläche", ylab = "Mietpreis")
mieten_lm <- lm(mietspiegel$nm ~ mietspiegel$wfl)
mieten_lm
f_100 <- (6.448 * 100) + 120.78
f_100
library(knitr)
index_daten <- rbind(c("A", "50 l", "2,00", "84 l", "1,00"),
c("B", "10 kg", "0,50", "15 kg", "0,50"),
c("C", "20 Stück", "0,20", "25 Stück", "0,30"),
c("D", "0,7 l", "30,00", "2,0 l", "35,00"))
colnames(index_daten) <- c("Gut", "Menge in 2009", "Preise in Euro/ME in 2009",
"Menge in 2012", "Preise in Euro/ME in 2012")
kable(index_daten)
a_2009 <- 50 * 2
b_2009 <- 10 * 0.5
c_2009 <- 20 * 0,2
a_2009 <- 50 * 2
b_2009 <- 10 * 0.5
c_2009 <- 20 * 0.2
d_2009 <- 0.7 * 30
a_2012 <- 50 * 1
b_2012 <- 10 * 0.5
c_2012 <- 10 * 0.3
d_2012 <- 0.7 * 35
a_2009 <- 50 * 2
b_2009 <- 10 * 0.5
c_2009 <- 20 * 0.2
d_2009 <- 0.7 * 30
a_2012 <- 50 * 1
b_2012 <- 10 * 0.5
c_2012 <- 10 * 0.3
d_2012 <- 0.7 * 35
preisindex_2009 <- sum(a_2009, b_2009, c_2009, d_2009)
preisindex_2012 <- sum(a_2012, b_2012, c_2012, d_2012)
a_2009 <- 50 * 2
b_2009 <- 10 * 0.5
c_2009 <- 20 * 0.2
d_2009 <- 0.7 * 30
a_2012 <- 50 * 1
b_2012 <- 10 * 0.5
c_2012 <- 10 * 0.3
d_2012 <- 0.7 * 35
preisindex_2009 <- sum(a_2009, b_2009, c_2009, d_2009)
preisindex_2012 <- sum(a_2012, b_2012, c_2012, d_2012)
preisindex_2009
preisindex_2012
a_2009 <- 50 * 2
b_2009 <- 10 * 0.5
c_2009 <- 20 * 0.2
d_2009 <- 0.7 * 30
a_2012 <- 50 * 1
b_2012 <- 10 * 0.5
c_2012 <- 20 * 0.3
d_2012 <- 0.7 * 35
preisindex_2009 <- sum(a_2009, b_2009, c_2009, d_2009)
preisindex_2012 <- sum(a_2012, b_2012, c_2012, d_2012)
preisindex_2009
preisindex_2012
P_1_2 <- preisindex_2012/preisindex_2009
P_1_2
P_1_2 <- preisindex_2012/preisindex_2009 *100
P_1_2
shiny::runApp('3. Semester/Statistik/Hausarbeit/Phil_18_Januar')
runApp('3. Semester/Statistik/Hausarbeit/Phil_18_Januar')
shiny::runApp('3. Semester/Statistik/Hausarbeit/Phil_18_Januar')
runApp('3. Semester/Statistik/Hausarbeit/Phil_18_Januar')
runApp('3. Semester/Statistik/Hausarbeit/Phil_18_Januar')
tabelle1 <- read.csv("RKI_COVID19-20210121.csv", encoding = "UTF-8")
tabelle1 <- read.csv("RKI_COVID19-20210121.csv", encoding = "UTF-8")
tabelle1 <- read.csv("RKI_COVID19-20210121.csv", encoding = "UTF-8")
tabelle1 <- read.csv("RKI_COVID19-20210121.csv", encoding = "UTF-8")
shiny::runApp('3. Semester/Statistik/Hausarbeit/Hausarbeit_Statistik')
tabelle1 <- read.csv("RKI_COVID19-20210121.csv", encoding = "UTF-8")
tabelle1 <- read.csv("RKI_COVID19-20210121.csv", encoding = "UTF-8")
tabelle1 <- read.csv("RKI_COVID19-20210121.csv", encoding = "UTF-8")
tabelle1 <- read.csv("RKI_COVID19-20210121.csv", encoding = "UTF-8")
tabelle1 <- read.csv("RKI_COVID19-20210121.csv", encoding = "UTF-8")
tabelle1 <- read.csv("RKI_COVID19-20210121.csv", encoding = "UTF-8")
tabelle1 <- read.csv("RKI_COVID19-20210121.csv", encoding = "UTF-8")
tabelle1 <- read.csv("RKI_COVID19-20210121.csv", encoding = "UTF-8")
tabelle1 <- read.csv("RKI_COVID19-20210121.csv", encoding = "UTF-8")
tabelle1 <- read.csv2("RKI_COVID19-20210121.csv", encoding = "UTF-8")
tabelle1 <- read.csv2("RKI_COVID19-20210121.csv", encoding = "UTF-8")
tabelle1 <- read.csv2("RKI_COVID19-20210121.csv", encoding = "UTF-8")
tabelle1 <- read.csv2("RKI_COVID19-20210121.csv", encoding = "UTF-8")
tabelle1 <- read.csv2("RKI_COVID19-20210121.csv", encoding = "UTF-8")
erstes_datum <- min(tabelle$meldedatum)
shiny::runApp('3. Semester/Statistik/Hausarbeit/Hausarbeit_Statistik')
##Datenaufbereitung
##Tabelle einlesen
tabelle <- read.csv("RKI_COVID19-20210121.csv", encoding = "UTF-8")
erstes_datum <- summary(tabelle$meldedatum)
##Datenaufbereitung
##Tabelle einlesen
tabelle <- read.csv("RKI_COVID19-20210121.csv", encoding = "UTF-8")
tabelle1 <- read.csv2("RKI_COVID19-20210121.csv", encoding = "UTF-8")
tabelle1 <- read.csv2("RKI_COVID19-20210121.csv", encoding = "UTF-8")
tabelle1 <- read.csv2("RKI_COVID19-20210121.csv", encoding = "UTF-8")
tabelle1 <- read.csv2("RKI_COVID19-20210121.csv", encoding = "UTF-8")
##Datenaufbereitung
##Tabelle einlesen
tabelle <- read.csv("RKI_COVID19-20210121.csv", encoding = "UTF-8")
runApp('3. Semester/Statistik/Hausarbeit/Hausarbeit_Statistik')
runApp('3. Semester/Statistik/Hausarbeit/Hausarbeit_Statistik')
runApp('3. Semester/Statistik/Hausarbeit/Hausarbeit_Statistik')
runApp('3. Semester/Statistik/Hausarbeit/Hausarbeit_Statistik')
shiny::runApp('3. Semester/Statistik/Hausarbeit/Hausarbeit_Statistik')
